spring:
  application:
    name: license-service
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest
  cloud:
    config:
      uri: http://localhost:8071
    stream:
      bindings:
        organizationConsumer-in-0:
          destination: test
          group: consumer
      #        supplier-out-0:
      #          destination: test
      #          producer:
      #            poller:
      #              fixed-delay: 1000
      function:
        definition: organizationConsumer

  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:10000/realms/ostock
  redis:
    host: localhost
    port: 6379

resilience4j:
  circuitbreaker:
    instances:
      licenseService:
        register-health-indicator: true
        sliding-window-size: 5
        permitted-number-of-calls-in-half-open-state: 1
        wait-duration-in-open-state: 10s
        failure-rate-threshold: 50
        record-exceptions:
          - org.springframework.web.client.HttpServerErrorException
          - java.io.IOException
          - java.util.concurrent.TimeoutException
          - org.springframework.web.client.ResourceAccessException

  bulkhead: # 信号量类型配置的参数
    instances:
      licenseService:
        max-concurrent-calls: 1
        max-wait-duration: 100ms

  thread-pool-bulkhead: # 线程池方式配置的参数
    instances:
      bulkheadLicenseService:
        max-thread-pool-size: 1
        core-thread-pool-size: 1
        queue-capacity: 1
        keep-alive-duration: 60000ms
  retry:
    instances:
      licenseService:
        max-attempts: 3
        wait-duration: 1000ms
        retry-exceptions: # 如果程序遇到如下的异常会进行重试
          - java.lang.Exception

  ratelimiter:
    instances:
      licenseService:
        register-health-indicator: true
        timeout-duration: 100ms
        limit-refresh-period: 1s
        limit-for-period: 1